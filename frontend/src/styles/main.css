/* Main Application Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Courier New', 'Monaco', 'Menlo', monospace;
    background: #000000;
    color: #00ff00;
    overflow: hidden;
    height: 100vh;
    text-shadow: 0 0 5px #00ff00;
}

#app {
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-areas:
        "header header header"
        "controls graph info";
    grid-template-columns: 300px 1fr 350px;
    grid-template-rows: 60px 1fr;
    gap: 0;
}

/* Header */
.app-header {
    grid-area: header;
    background: #000000;
    border-bottom: 2px solid #00ff00;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: 0 20px;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(0, 255, 0, 0.3);
    gap: 20px;
}

.app-header h1 {
    font-size: 1.2rem;
    font-weight: bold;
    color: #00ff00;
    text-shadow: 0 0 10px #00ff00;
    letter-spacing: 1px;
    flex-shrink: 0;
    margin: 0;
}

.app-header h1::before {
    content: '> ';
    color: #00ff00;
    animation: blink 1s infinite;
}

.header-stats {
    display: flex;
    gap: 20px;
    font-size: 0.9rem;
    color: #00ff00;
    font-family: 'Courier New', monospace;
}

.header-stats span {
    padding: 4px 8px;
    background: rgba(0, 255, 0, 0.1);
    border: 1px solid #00ff00;
    text-shadow: 0 0 5px #00ff00;
}

@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
}

/* 3D Graph Container */
#3d-graph {
    grid-area: graph;
    background: #000000;
    position: relative;
    overflow: hidden;
    border: 1px solid #00ff00;
    box-shadow: inset 0 0 20px rgba(0, 255, 0, 0.2);
}

/* Loading Overlay */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.95);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.3s ease;
}

.loading-overlay.hidden {
    opacity: 0;
    pointer-events: none;
}

.loading-content {
    text-align: center;
    color: #00ff00;
    font-family: 'Courier New', monospace;
}

.loading-spinner {
    width: 60px;
    height: 60px;
    border: 4px solid rgba(0, 255, 0, 0.3);
    border-top: 4px solid #00ff00;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 20px;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.loading-content h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
    color: #00ff00;
    text-shadow: 0 0 10px #00ff00;
    letter-spacing: 2px;
}

.loading-content h2::before {
    content: '[INIT] ';
    color: #00ff00;
}

.loading-content p {
    color: #00ff00;
    font-size: 1rem;
    text-shadow: 0 0 5px #00ff00;
}

.loading-content p::before {
    content: '> ';
    animation: blink 1s infinite;
}

/* Responsive Design */
@media (max-width: 1200px) {
    #app {
        grid-template-columns: 280px 1fr 320px;
    }
}

@media (max-width: 900px) {
    #app {
        grid-template-areas:
            "header"
            "graph";
        grid-template-columns: 1fr;
        grid-template-rows: 60px 1fr;
    }

    .controls-panel,
    .info-panel {
        position: fixed;
        top: 60px;
        z-index: 1001;
        max-height: calc(100vh - 60px);
        overflow-y: auto;
    }

    .controls-panel {
        left: -280px;
        transition: left 0.3s ease;
    }

    .controls-panel.open {
        left: 0;
    }

    .info-panel {
        right: -320px;
        transition: right 0.3s ease;
    }

    .info-panel.open {
        right: 0;
    }
}

/* Animations */
.fade-in {
    animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.slide-in-left {
    animation: slideInLeft 0.3s ease;
}

@keyframes slideInLeft {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}

.slide-in-right {
    animation: slideInRight 0.3s ease;
}

@keyframes slideInRight {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}